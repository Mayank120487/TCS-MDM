projectMavenRepo=build/offline/maven-repo
# if you change this, you need to modify gradlew and gradlew.bat also
projectGradleHome=build/gradle-home
disconnected=true

contentXccUrl=xcc://admin:admin@localhost:8017
contentXccStaging=xcc://admin:admin@localhost:8015

mlRestPort=8017

# These settings are used by the Data Hub Framework when
# communicating with MarkLogic.
# The values in this file are meant as project-wide settings.
# You can override these properties for a specific environment
# by creating a gradle-{environment}.properties file.
# For example, to create a properties file for your prod environment create a file
# named gradle-prod.properties.
#
# ....
mlDHFVersion=5.2.0
mlHost=localhost

# If you are working with a load balancer please specify it here
# mlIsHostLoadBalancer=false

# Your MarkLogic Username and Password
mlUsername=admin
mlPassword=admin



# If specified, the manage username/password combo is used with the ML Management REST API for managing application
# resources; this user must have the manage-admin and rest-admin roles.
#
# If these are not set, then mlUsername/mlPassword is used for managing application resources.
# mlManageUsername=
# mlManagePassword=
#
# To change the Manage Port
# mlManagePort=8002
#
# To use SSL on the Manage appserver (port 8002 by default)
# mlManageScheme=https
# mlManageSimpleSsl=true
#
# If specified, mlSecurityUsername/mlSecurityPassword is used for talking to Security end points on port 8002; this 
# user must have the "manage-admin" and "security" roles.
#
# mlSecurityUsername=
# mlSecurityPassword=
#
# To change the Admin Port
# mlAdminPort=8001
#
# To use SSL on the Admin appserver (port 8001 by default)
# mlAdminScheme=https
# mlAdminSimpleSsl=true


# If specified, these values can override where the DHF thinks
# MarkLogic default ports are at. You would only use this if you
# have changed the ports on which MarkLogic listens
#
# mlAppServicesPort=8000
#
# To use SSL on the AppServices appserver (port 8000 by default)
#mlAppServicesSimpleSsl=true


mlStagingAppserverName=9003-smart-data-hub-STAGING
mlStagingPort=9003
mlStagingDbName=smart-data-hub-STAGING
mlStagingForestsPerHost=0
mlStagingAuth=digest

mlJobAppserverName=9004-smart-data-hub-JOBS
mlJobPort=9004
mlJobDbName=smart-data-hub-JOBS
mlJobForestsPerHost=0
mlJobAuth=digest

mlFinalAppserverName=9005-smart-data-hub-FINAL
mlFinalPort=9005
mlFinalDbName=smart-data-hub-FINAL
mlFinalForestsPerHost=0
mlFinalAuth=digest


mlModulesDbName=smart-data-hub-MODULES
mlModulesForestsPerHost=0

mlStagingTriggersDbName=smart-data-hub-staging-TRIGGERS
mlStagingTriggersForestsPerHost=0

mlStagingSchemasDbName=smart-data-hub-staging-SCHEMAS
mlStagingSchemasForestsPerHost=0

mlFinalTriggersDbName=smart-data-hub-final-TRIGGERS
mlFinalTriggersForestsPerHost=0

mlFinalSchemasDbName=smart-data-hub-final-SCHEMAS
mlFinalSchemasForestsPerHost=0

# You can override this to specify an alternate folder for your
# custom forest info. Defaults to user-config/forests/
# mlCustomForestPath=forests

# Alstom REST services user
sdhRESTUserName=sdh_rest_user
sdhRESTUserPassword=rest123
sdhRESTUserRole=admin

# Alstom Dell bhoomi user
sdhDBUserName=dellbhoomi_user
sdhDBUserPassword=dellboomi
sdhDBUserRole=admin

Orchestra-login=Orchestra
Orchestra-password=Orchestra

# The name of the Role to create for Hub Access
mlFlowOperatorRole=flow-operator-role
mlFlowOperatorUserName=flow-operator
# this password is autogenerated for you via the 'gradle hubInit' task
mlFlowOperatorPassword=x*`U$eqe&kgejD;,$~c4

mlFlowDeveloperRole=flow-developer-role
mlFlowDeveloperUserName=flow-developer
# this password is autogenerated for you via the 'gradle hubInit' task
mlFlowDeveloperPassword==@<iD.{T$<$,;V[L.Sv<

# The name of the role to create for hub deployment/development
mlDataHubAdminRole=data-hub-admin-role

# Deprecated property
# If you are working with a load balancer please indicate so using
# property "mlIsHostLoadBalancer"
# When "mlIsHostLoadBalancer" is set to "true", the value specified for "mlHost" will be used as the load balancer.
# You do not need to explicitly set the value of "mlLoadBalancerHosts" but if you do it must match the value of the property "mlHost"
# mlLoadBalancerHosts=your-load-balancer-hostname

# Default module permissions which allow flow-operator-role to execute flows
mlModulePermissions=rest-reader,read,rest-writer,insert,rest-writer,update,rest-extension-user,execute,flow-developer-role,read,flow-developer-role,execute,flow-developer-role,insert,flow-operator-role,read,flow-operator-role,execute

# If DHF is running in a provisioned environment please specify it here
# mlIsProvisionedEnvironment=false

# The name of the Role to create for Hub Access
mlHubUserRole=smart-data-hub-role
mlHubUserName=smart-data-hub-user
# this password is autogenerated for you via the 'gradle hubInit' task
mlHubUserPassword=)XH#Y4X=&UrI#..[w$G=

# The name of the role to create for hub deployment/development
mlHubAdminRole=smart-data-hub-admin-role
mlHubAdminUserName=smart-data-hub-admin-user
mlHubAdminUserPassword='d;M?//HgCvv)+iLqL~_


